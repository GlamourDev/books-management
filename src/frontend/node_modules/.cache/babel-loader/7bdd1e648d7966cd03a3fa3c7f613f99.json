{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\src\\\\component\\\\commentbox.js\";\nimport React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\n\nvar ReactComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReactComment, _Component);\n\n  function ReactComment() {\n    _classCallCheck(this, ReactComment);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ReactComment).apply(this, arguments));\n  }\n\n  _createClass(ReactComment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var el = ReactDOM.findDOMNode(this);\n      ReactDOM.unmountComponentAtNode(el);\n      el.outerHTML = this.createComment();\n    }\n  }, {\n    key: \"createComment\",\n    value: function createComment() {\n      var text = this.props.text;\n\n      if (this.props.trim) {\n        text = text.trim();\n      }\n\n      return \"<!-- \".concat(text, \" -->\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ReactComment;\n}(Component);\n\nReactComment.propTypes = {\n  text: PropTypes.string,\n  trim: PropTypes.bool\n};\nReactComment.defaultProps = {\n  trim: true\n};\nexport default ReactComment;","map":{"version":3,"sources":["C:\\Users\\Henry\\Pictures\\tlnsadama kliendipinnacroppedimages\\react-and-spring-master\\frontend\\src\\component\\commentbox.js"],"names":["React","Component","PropTypes","ReactDOM","ReactComment","el","findDOMNode","unmountComponentAtNode","outerHTML","createComment","text","props","trim","propTypes","string","bool","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,WAArB;;IAEMC,Y;;;;;;;;;;;;;wCAUkB;AAChB,UAAIC,EAAE,GAAGF,QAAQ,CAACG,WAAT,CAAqB,IAArB,CAAT;AACAH,MAAAA,QAAQ,CAACI,sBAAT,CAAgCF,EAAhC;AACAA,MAAAA,EAAE,CAACG,SAAH,GAAe,KAAKC,aAAL,EAAf;AACH;;;oCAEe;AACZ,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AAEA,UAAI,KAAKC,KAAL,CAAWC,IAAf,EAAqB;AACjBF,QAAAA,IAAI,GAAGA,IAAI,CAACE,IAAL,EAAP;AACH;;AAED,4BAAeF,IAAf;AACH;;;6BAEQ;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EA5BsBT,S;;AAArBG,Y,CACKS,S,GAAY;AACfH,EAAAA,IAAI,EAAER,SAAS,CAACY,MADD;AAEfF,EAAAA,IAAI,EAAEV,SAAS,CAACa;AAFD,C;AADjBX,Y,CAMKY,Y,GAAe;AAClBJ,EAAAA,IAAI,EAAE;AADY,C;AAyB1B,eAAeR,YAAf","sourcesContent":["import React, {Component, PropTypes} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass ReactComment extends Component {\r\n    static propTypes = {\r\n        text: PropTypes.string,\r\n        trim: PropTypes.bool\r\n    };\r\n\r\n    static defaultProps = {\r\n        trim: true\r\n    };\r\n\r\n    componentDidMount() {\r\n        let el = ReactDOM.findDOMNode(this);\r\n        ReactDOM.unmountComponentAtNode(el);\r\n        el.outerHTML = this.createComment();\r\n    }\r\n\r\n    createComment() {\r\n        let text = this.props.text;\r\n\r\n        if (this.props.trim) {\r\n            text = text.trim();\r\n        }\r\n\r\n        return `<!-- ${text} -->`;\r\n    }\r\n\r\n    render() {\r\n        return <div />;\r\n    }\r\n}\r\n\r\nexport default ReactComment;"]},"metadata":{},"sourceType":"module"}