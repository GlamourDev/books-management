{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\src\\\\service\\\\CourseDataService.js\",\"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\src\\\\pagination\\\\wrappers.js\",\"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\src\\\\pagination\\\\index.js\",\"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\src\\\\component\\\\ListCoursesComponent.jsx\",\"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\src\\\\component\\\\CourseComponent.jsx\",\"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\src\\\\component\\\\InstructorApp.jsx\",\"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\src\\\\App.js\",\"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\src\\\\index.js\"],\"names\":[\"INSTRUCTOR_API_URL\",\"concat\",\"service_CourseDataService\",\"name\",\"axios\",\"get\",\"id\",\"delete\",\"course\",\"put\",\"post\",\"bcc\",\"block\",\"element\",\"Pagination\",\"Link\",\"Prev\",\"Next\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"activePage\",\"defaultActivePage\",\"totalOfItems\",\"handleNextClick\",\"bind\",\"assertThisInitialized\",\"handlePreviousClick\",\"handleLinkClick\",\"nextProps\",\"setState\",\"onChange\",\"itemsPerPage\",\"Math\",\"ceil\",\"update\",\"numberOfPages\",\"calculateNumberOfPages\",\"evt\",\"target\",\"textContent\",\"trim\",\"_this2\",\"numbers\",\"n\",\"i\",\"push\",\"numbersTo\",\"react_default\",\"a\",\"createElement\",\"wrappers_Pagination\",\"onClick\",\"map\",\"modifiers\",\"Component\",\"defaultProps\",\"ListCoursesComponent\",\"courses\",\"todos\",\"currentPage\",\"todosPerPage\",\"message\",\"deleteCourseClicked\",\"updateCourseClicked\",\"addCourseClicked\",\"refreshCourses\",\"handleClick\",\"event\",\"Number\",\"_this3\",\"CourseDataService\",\"retrieveAllCourses\",\"then\",\"response\",\"console\",\"log\",\"data\",\"_this4\",\"deleteCourse\",\"history\",\"_this5\",\"_this$state\",\"indexOfLastTodo\",\"indexOfFirstTodo\",\"currentTodos\",\"slice\",\"pageNumbers\",\"length\",\"renderPageNumbers\",\"number\",\"key\",\"className\",\"class\",\"description\",\"author\",\"isbn\",\"commentCount\",\"CourseComponent\",\"match\",\"params\",\"onSubmit\",\"validate\",\"retrieveCourse\",\"values\",\"errors\",\"targetDate\",\"createCourse\",\"updateCourse\",\"formik_esm\",\"initialValues\",\"validateOnChange\",\"validateOnBlur\",\"enableReinitialize\",\"component\",\"type\",\"disabled\",\"InstructorApp\",\"react_router_dom\",\"Fragment\",\"react_router\",\"path\",\"exact\",\"App\",\"component_InstructorApp\",\"Boolean\",\"window\",\"location\",\"hostname\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"iSAIMA,EAAkB,GAAAC,OADD,wBACC,iBAAAA,OAFL,eAgCJC,EAAA,+GA1BQC,GAEf,OAAOC,EAAAA,EAAMC,IAAN,GAAAJ,OAAaD,EAAb,oDAGIG,EAAMG,GAEjB,OAAOF,EAAAA,EAAMC,IAAN,GAAAJ,OAAaD,EAAb,aAAAC,OAA2CK,yCAGzCH,EAAMG,GAEf,OAAOF,EAAAA,EAAMG,OAAN,GAAAN,OAAgBD,EAAhB,aAAAC,OAA8CK,yCAG5CH,EAAMG,EAAIE,GAEnB,OAAOJ,EAAAA,EAAMK,IAAN,GAAAR,OAAaD,EAAb,aAAAC,OAA2CK,GAAME,wCAG/CL,EAAMK,GAEf,OAAOJ,EAAAA,EAAMM,KAAN,GAAAT,OAAcD,EAAd,aAA6CQ,6BC3BjCG,EAAAA,CAAI,yBAAvBC,IAAAA,MAAOC,IAAAA,QAEFC,EAAaF,EAAM,OAEhCE,EAAWC,KAAOF,EAAQ,SAAU,QACpCC,EAAWE,KAAOH,EAAQ,SAAU,YACpCC,EAAWG,KAAOJ,EAAQ,SAAU,QAErB,ICCTC,cACJ,SAAAA,EAAYI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAR,IACjBK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAN,GAAAW,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,WAAYT,EAAMU,kBAClBC,aAAcX,EAAMW,cAEtBV,EAAKW,gBAAkBX,EAAKW,gBAAgBC,KAArBX,OAAAY,EAAA,EAAAZ,CAAAA,OAAAY,EAAA,EAAAZ,CAAAD,KACvBA,EAAKc,oBAAsBd,EAAKc,oBAAoBF,KAAzBX,OAAAY,EAAA,EAAAZ,CAAAA,OAAAY,EAAA,EAAAZ,CAAAD,KAC3BA,EAAKe,gBAAkBf,EAAKe,gBAAgBH,KAArBX,OAAAY,EAAA,EAAAZ,CAAAA,OAAAY,EAAA,EAAAZ,CAAAD,KARNA,yFAWOgB,GACpBA,EAAUN,eAAiBP,KAAKJ,MAAMW,cACxCP,KAAKc,SAAS,CACZP,aAAcM,EAAUN,8CAOvBF,GACLL,KAAKc,SAAS,CAAET,WAAAA,IAChBL,KAAKJ,MAAMmB,SAAS,CAClBV,WAAAA,EACAE,aAAcP,KAAKJ,MAAMW,aACzBS,aAAchB,KAAKJ,MAAMoB,gEAK3B,OAAOC,KAAKC,KAAKlB,KAAKJ,MAAMW,aAAaP,KAAKJ,MAAMoB,4DAIhDhB,KAAKI,MAAMC,WAAa,GAC1BL,KAAKmB,OAAOnB,KAAKI,MAAMC,WAAa,6CAKtC,IAAMe,EAAgBpB,KAAKqB,yBACvBrB,KAAKI,MAAMC,WAAae,GAC1BpB,KAAKmB,OAAOnB,KAAKI,MAAMC,WAAa,2CAIxBiB,GACdtB,KAAKmB,QAAQG,EAAIC,OAAOC,YAAYC,yCAG7B,IAAAC,EAAA1B,KAED2B,EA9DQ,SAACC,GAEjB,IADA,IAAMD,EAAU,GACPE,EAAI,EAAGA,EAAID,EAAGC,IACrBF,EAAQG,KAAKD,EAAE,GAEjB,OAAOF,EAyDWI,CADM/B,KAAKqB,0BAE3B,OACEW,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAUzC,KAAX,CAAgB0C,QAASpC,KAAKW,qBAA9B,QAGCgB,EAAQU,IAAI,SAAAR,GAAC,OACZG,EAAAC,EAAAC,cAACC,EAAU1C,KAAX,CACE6C,UAAWT,IAAMH,EAAKtB,MAAMC,WAAa,SAAW,WACpD+B,QAASV,EAAKd,iBAEbiB,KAGLG,EAAAC,EAAAC,cAACC,EAAUxC,KAAX,CAAgByC,QAASpC,KAAKQ,iBAA9B,gBApEiB+B,EAAAA,WAmFzB/C,EAAWgD,aAAe,CACxBlC,kBAAmB,EACnBC,aAAc,EACdS,aAAc,GACdD,SAAU,cAGGvB,IC2DAiD,cA7Ib,SAAAA,EAAY7C,GAAO,IAAA8B,EAAA,OAAA5B,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,IACjBf,EAAA5B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2C,GAAAtC,KAAAH,KAAMJ,KACDQ,MAAQ,CACXsC,QAAS,GACTC,MAAO,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAChDC,YAAa,EACbC,aAAc,EACdC,QAAS,MAEXpB,EAAKqB,oBAAsBrB,EAAKqB,oBAAoBtC,KAAzBX,OAAAY,EAAA,EAAAZ,CAAAA,OAAAY,EAAA,EAAAZ,CAAA4B,KAC3BA,EAAKsB,oBAAsBtB,EAAKsB,oBAAoBvC,KAAzBX,OAAAY,EAAA,EAAAZ,CAAAA,OAAAY,EAAA,EAAAZ,CAAA4B,KAC3BA,EAAKuB,iBAAmBvB,EAAKuB,iBAAiBxC,KAAtBX,OAAAY,EAAA,EAAAZ,CAAAA,OAAAY,EAAA,EAAAZ,CAAA4B,KACxBA,EAAKwB,eAAiBxB,EAAKwB,eAAezC,KAApBX,OAAAY,EAAA,EAAAZ,CAAAA,OAAAY,EAAA,EAAAZ,CAAA4B,KACtBA,EAAKyB,YAAczB,EAAKyB,YAAY1C,KAAjBX,OAAAY,EAAA,EAAAZ,CAAAA,OAAAY,EAAA,EAAAZ,CAAA4B,KAbFA,mFAiBjB1B,KAAKkD,qDAGKE,GACVpD,KAAKc,SAAS,CACZ8B,YAAaS,OAAOD,EAAM7B,OAAOvC,+CAIpB,IAAAsE,EAAAtD,KACfuD,EAAkBC,mBA3CH,eA4CZC,KAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZJ,EAAKxC,SAAS,CAAE4B,QAASgB,EAASG,qDAIpB7E,GAAI,IAAA8E,EAAA9D,KACtBuD,EAAkBQ,aAnDH,cAmD4B/E,GAAIyE,KAAK,SAAAC,GAClDI,EAAKhD,SAAS,CAAEgC,QAAO,oBAAAnE,OAAsBK,EAAtB,iBACvB8E,EAAKZ,8DAKPlD,KAAKJ,MAAMoE,QAAQlC,KAAnB,2DAGkB9C,GAClB2E,QAAQC,IAAI,UAAY5E,GACxB2E,QAAQC,IAAI,gBAAiB5D,KAAKI,MAAMsC,SACxC1C,KAAKJ,MAAMoE,QAAQlC,KAAnB,YAAAnD,OAAoCK,qCAG7B,IAAAiF,EAAAjE,KAAAkE,EACwClE,KAAKI,MAA5CsC,EADDwB,EACCxB,QAASE,EADVsB,EACUtB,YAAaC,EADvBqB,EACuBrB,aAGxBsB,EAAkBvB,EAAcC,EAChCuB,EAAmBD,EAAkBtB,EACrCwB,EAAe3B,EAAQ4B,MAAMF,EAAkBD,GACrDR,QAAQC,IAAIS,GAQZ,IADA,IAAME,EAAc,GACX1C,EAAI,EAAGA,GAAKZ,KAAKC,KAAKwB,EAAQ8B,OAAS3B,GAAehB,IAC7D0C,EAAYzC,KAAKD,GAGnB,IAAM4C,EAAoBF,EAAYlC,IAAI,SAAAqC,GACxC,OACE1C,EAAAC,EAAAC,cAAA,KAAA,CAAIyC,IAAKD,EAAQ1F,GAAI0F,EAAQtC,QAAS6B,EAAKd,aACxCuB,KAMP,OADAf,QAAQC,IAAI,UAEV5B,EAAAC,EAAAC,cAAA,MAAA,CAAK0C,UAAU,aACb5C,EAAAC,EAAAC,cAAA,KAAA,KAAA,SACClC,KAAKI,MAAM0C,SACVd,EAAAC,EAAAC,cAAA,MAAA,CAAK2C,MAAM,uBAAuB7E,KAAKI,MAAM0C,SAE/Cd,EAAAC,EAAAC,cAAA,MAAA,CAAK0C,UAAU,aACb5C,EAAAC,EAAAC,cAAA,QAAA,CAAO0C,UAAU,SACf5C,EAAAC,EAAAC,cAAA,QAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAA,KACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,SACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,UACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,WACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,YACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,UACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,YAGJF,EAAAC,EAAAC,cAAA,QAAA,KACGlC,KAAKI,MAAMsC,QAAQL,IAAI,SAAAnD,GAAM,OAC5B8C,EAAAC,EAAAC,cAAA,KAAA,CAAIyC,IAAKzF,EAAOF,IACdgD,EAAAC,EAAAC,cAAA,KAAA,KAAKhD,EAAOF,IACZgD,EAAAC,EAAAC,cAAA,KAAA,KAAKhD,EAAO4F,aACZ9C,EAAAC,EAAAC,cAAA,KAAA,KAAKhD,EAAO6F,QACZ/C,EAAAC,EAAAC,cAAA,KAAA,KAAKhD,EAAO8F,MACZhD,EAAAC,EAAAC,cAAA,KAAA,KAAKhD,EAAO+F,cACZjD,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAAA,SAAA,CACE0C,UAAU,kBACVxC,QAAS,WAAA,OAAM6B,EAAKjB,oBAAoB9D,EAAOF,MAFjD,WAOFgD,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAAA,SAAA,CACE0C,UAAU,kBACVxC,QAAS,WAAA,OAAM6B,EAAKlB,oBAAoB7D,EAAOF,MAFjD,gBAWVgD,EAAAC,EAAAC,cAAA,MAAA,CAAK0C,UAAU,OACb5C,EAAAC,EAAAC,cAAA,SAAA,CAAQ0C,UAAU,kBAAkBxC,QAASpC,KAAKiD,kBAAlD,aAIFjB,EAAAC,EAAAC,cAAA,MAAA,KAEEF,EAAAC,EAAAC,cAAA,KAAA,CAAIlD,GAAG,gBAAgByF,aAtIAlC,EAAAA,mCCuGpB2C,cAnHX,SAAAA,EAAYtF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkF,IACfrF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoF,GAAA/E,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTpB,GAAIa,EAAKD,MAAMuF,MAAMC,OAAOpG,GAC5B+F,OAAQ,GACRD,YAAa,GACbE,KAAM,IAGVnF,EAAKwF,SAAWxF,EAAKwF,SAAS5E,KAAdX,OAAAY,EAAA,EAAAZ,CAAAA,OAAAY,EAAA,EAAAZ,CAAAD,KAChBA,EAAKyF,SAAWzF,EAAKyF,SAAS7E,KAAdX,OAAAY,EAAA,EAAAZ,CAAAA,OAAAY,EAAA,EAAAZ,CAAAD,KAXDA,mFAeC,IAAA6B,EAAA1B,KAEhB2D,QAAQC,IAAI5D,KAAKI,MAAMpB,KAGD,GAAlBgB,KAAKI,MAAMpB,IAIfuE,EAAkBgC,eA3BP,cA2BkCvF,KAAKI,MAAMpB,IACnDyE,KAAK,SAAAC,GAAQ,OAAIhC,EAAKZ,SAAS,CAC5BgE,YAAapB,EAASG,KAAKiB,YAC3BC,OAAQrB,EAASG,KAAKkB,OACtBC,KAAMtB,EAASG,KAAKmB,0CAIvBQ,GACL,IAAIC,EAAS,GAOb,OANKD,EAAOV,YAEDU,EAAOV,YAAYN,OAAS,IACnCiB,EAAOX,YAAc,6CAFrBW,EAAOX,YAAc,sBAKlBW,mCAIFD,GAAQ,IAAAlC,EAAAtD,KAGTd,EAAS,CACTF,GAAIgB,KAAKI,MAAMpB,GACf8F,YAAaU,EAAOV,YACpBC,OAAQS,EAAOT,OACfC,KAAMQ,EAAOR,KACbU,WAAYF,EAAOE,aAGA,IAAnB1F,KAAKI,MAAMpB,GACXuE,EAAkBoC,aA3DX,cA2DkCzG,GACpCuE,KAAK,WAAA,OAAMH,EAAK1D,MAAMoE,QAAQlC,KAAK,cAExCyB,EAAkBqC,aA9DX,cA8DkC5F,KAAKI,MAAMpB,GAAIE,GACnDuE,KAAK,WAAA,OAAMH,EAAK1D,MAAMoE,QAAQlC,KAAK,cAG5C6B,QAAQC,IAAI4B,oCAGP,IAAAtB,EAEmClE,KAAKI,MAAvC0E,EAFDZ,EAECY,YAAa9F,EAFdkF,EAEclF,GAAI+F,EAFlBb,EAEkBa,OAAQC,EAF1Bd,EAE0Bc,KAE/B,OACIhD,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,KAAA,KAAA,SACAF,EAAAC,EAAAC,cAAA,MAAA,CAAK0C,UAAU,aACX5C,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACIC,cAAe,CAAE9G,GAAAA,EAAI8F,YAAAA,EAAaC,OAAAA,EAAQC,KAAAA,GAC1CK,SAAUrF,KAAKqF,SACfU,kBAAkB,EAClBC,gBAAgB,EAChBV,SAAUtF,KAAKsF,SACfW,oBAAoB,GAGhB,SAACrG,GAAD,OACIoC,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,KACI7D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAchH,KAAK,cAAcqH,UAAU,MACvCtB,UAAU,wBACd5C,EAAAC,EAAAC,cAAA,WAAA,CAAU0C,UAAU,cAChB5C,EAAAC,EAAAC,cAAA,QAAA,KAAA,MACAF,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOjB,UAAU,eAAeuB,KAAK,OAAOtH,KAAK,KAAKuH,UAAQ,KAElEpE,EAAAC,EAAAC,cAAA,WAAA,CAAU0C,UAAU,cAChB5C,EAAAC,EAAAC,cAAA,QAAA,KAAA,SACAF,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOjB,UAAU,eAAeuB,KAAK,OAAOtH,KAAK,iBAErDmD,EAAAC,EAAAC,cAAA,WAAA,CAAU0C,UAAU,cAChB5C,EAAAC,EAAAC,cAAA,QAAA,KAAA,UACAF,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOjB,UAAU,eAAeuB,KAAK,OAAOtH,KAAK,YAErDmD,EAAAC,EAAAC,cAAA,WAAA,CAAU0C,UAAU,cAChB5C,EAAAC,EAAAC,cAAA,QAAA,KAAA,WACAF,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOjB,UAAU,eAAeuB,KAAK,OAAOtH,KAAK,UAErDmD,EAAAC,EAAAC,cAAA,SAAA,CAAQ0C,UAAU,kBAAkBuB,KAAK,UAAzC,oBAxGN5D,EAAAA,WCgBf8D,mLAfP,OACIrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,KACItE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsE,SAAA,KACIvE,EAAAC,EAAAC,cAAA,KAAA,KAAA,8BACAF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,KACIxE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACR,UAAWzD,IACjCT,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAOC,KAAK,WAAWC,OAAK,EAACR,UAAWzD,IACxCT,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAOC,KAAK,eAAeP,UAAWhB,cATlC3C,EAAAA,WCSboE,mLARX,OACE3E,EAAAC,EAAAC,cAAA,MAAA,CAAK0C,UAAU,aACb5C,EAAAC,EAAAC,cAAC0E,EAAD,cAJUrE,EAAAA,WCQEsE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7B,MACvB,2DCZN8B,EAAAA,EAASC,OAAOlF,EAAAC,EAAAC,cAACiF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/D,KAAK,SAAAgE,GACjCA,EAAaC\",\"sourcesContent\":[\"import axios from 'axios'\\n\\nconst INSTRUCTOR = 'in28minutes'\\nconst COURSE_API_URL = 'http://localhost:8080'\\nconst INSTRUCTOR_API_URL = `${COURSE_API_URL}/instructors/${INSTRUCTOR}`\\n\\nclass CourseDataService {\\n\\n    retrieveAllCourses(name) {\\n        //console.log('executed service')\\n        return axios.get(`${INSTRUCTOR_API_URL}/courses`);\\n    }\\n\\n    retrieveCourse(name, id) {\\n        //console.log('executed service')\\n        return axios.get(`${INSTRUCTOR_API_URL}/courses/${id}`);\\n    }\\n\\n    deleteCourse(name, id) {\\n        //console.log('executed service')\\n        return axios.delete(`${INSTRUCTOR_API_URL}/courses/${id}`);\\n    }\\n\\n    updateCourse(name, id, course) {\\n        //console.log('executed service')\\n        return axios.put(`${INSTRUCTOR_API_URL}/courses/${id}`, course);\\n    }\\n\\n    createCourse(name, course) {\\n        //console.log('executed service')\\n        return axios.post(`${INSTRUCTOR_API_URL}/courses/`, course);\\n    }\\n}\\n\\nexport default new CourseDataService()\",\"import React from \\\"react\\\";\\r\\nimport bcc from 'bem-react-component-creator';\\r\\n\\r\\nconst { block, element } = bcc('crud-table-pagination');\\r\\n\\r\\nexport const Pagination = block('div');\\r\\n\\r\\nPagination.Link = element('button', 'link');\\r\\nPagination.Prev = element('button', 'previous');\\r\\nPagination.Next = element('button', 'next');\\r\\n\\r\\nexport default { Pagination };\",\"import React, { Component } from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport { Pagination as Container } from './wrappers';\\r\\n\\r\\nconst numbersTo = (n) => {\\r\\n  const numbers = [];\\r\\n  for (let i = 0; i < n; i++) { \\r\\n    numbers.push(i+1);\\r\\n  }\\r\\n  return numbers;\\r\\n};\\r\\n\\r\\nclass Pagination extends Component {\\r\\n  constructor(props) {\\r\\n    super(props);\\r\\n    this.state = {\\r\\n      activePage: props.defaultActivePage,\\r\\n      totalOfItems: props.totalOfItems,\\r\\n    };\\r\\n    this.handleNextClick = this.handleNextClick.bind(this);\\r\\n    this.handlePreviousClick = this.handlePreviousClick.bind(this);\\r\\n    this.handleLinkClick = this.handleLinkClick.bind(this);\\r\\n  }\\r\\n\\r\\n  componentWillReceiveProps(nextProps) {\\r\\n    if (nextProps.totalOfItems !== this.props.totalOfItems) {\\r\\n      this.setState({\\r\\n        totalOfItems: nextProps.totalOfItems,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  \\r\\n\\r\\n  update(activePage) {\\r\\n    this.setState({ activePage });\\r\\n    this.props.onChange({\\r\\n      activePage,\\r\\n      totalOfItems: this.props.totalOfItems,\\r\\n      itemsPerPage: this.props.itemsPerPage,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  calculateNumberOfPages() {\\r\\n    return Math.ceil(this.props.totalOfItems/this.props.itemsPerPage);\\r\\n  }\\r\\n\\r\\n  handlePreviousClick() {\\r\\n    if (this.state.activePage > 1) {\\r\\n      this.update(this.state.activePage - 1);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  handleNextClick() {\\r\\n    const numberOfPages = this.calculateNumberOfPages();\\r\\n    if (this.state.activePage < numberOfPages) {\\r\\n      this.update(this.state.activePage + 1);\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  handleLinkClick(evt) {\\r\\n    this.update(+evt.target.textContent.trim());\\r\\n  }\\r\\n  \\r\\n  render() {\\r\\n    const numberOfPages = this.calculateNumberOfPages();\\r\\n    const numbers = numbersTo(numberOfPages);\\r\\n    return (\\r\\n      <Container>\\r\\n        <Container.Prev onClick={this.handlePreviousClick}>\\r\\n          &laquo;\\r\\n        </Container.Prev>\\r\\n        {numbers.map(i => (\\r\\n          <Container.Link\\r\\n            modifiers={i === this.state.activePage ? 'active' : 'inactive'}\\r\\n            onClick={this.handleLinkClick}\\r\\n          >\\r\\n            {i}\\r\\n          </Container.Link>\\r\\n        ))}\\r\\n        <Container.Next onClick={this.handleNextClick}>\\r\\n          &raquo;\\r\\n        </Container.Next>\\r\\n      </Container>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nPagination.propTypes = {\\r\\n  defaultActivePage: PropTypes.number,\\r\\n  itemsPerPage: PropTypes.number,\\r\\n  totalOfItems: PropTypes.number,\\r\\n  onChange: PropTypes.func,\\r\\n};\\r\\n\\r\\nPagination.defaultProps = {\\r\\n  defaultActivePage: 1,\\r\\n  totalOfItems: 0,\\r\\n  itemsPerPage: 10,\\r\\n  onChange: () => {},\\r\\n};\\r\\n\\r\\nexport default Pagination;\",\"import React, { Component } from \\\"react\\\";\\nimport CourseDataService from \\\"../service/CourseDataService\\\";\\nimport Pagination from \\\"../pagination\\\";\\n\\nconst INSTRUCTOR = \\\"in28minutes\\\";\\n\\nconst service = {\\n  fetchItems: payload => {\\n    let result = Array.from(this.state.courses);\\n    const { activePage, itemsPerPage } = payload.pagination;\\n    const start = (activePage - 1) * itemsPerPage;\\n    const end = start + itemsPerPage;\\n    console.log(result);\\n    const resultpagination = result.slice(start, end);\\n    return Promise.resolve(resultpagination);\\n  },\\n  fetchTotal: () => Promise.resolve(this.state.courses.length)\\n};\\n\\nclass ListCoursesComponent extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      courses: [],\\n      todos: ['a','b','c','d','e','f','g','h','i','j','k'],\\n      currentPage: 1,\\n      todosPerPage: 3,\\n      message: null\\n    };\\n    this.deleteCourseClicked = this.deleteCourseClicked.bind(this);\\n    this.updateCourseClicked = this.updateCourseClicked.bind(this);\\n    this.addCourseClicked = this.addCourseClicked.bind(this);\\n    this.refreshCourses = this.refreshCourses.bind(this);\\n    this.handleClick = this.handleClick.bind(this);\\n  }\\n\\n  componentDidMount() {\\n    this.refreshCourses();\\n  }\\n\\n  handleClick(event) {\\n    this.setState({\\n      currentPage: Number(event.target.id)\\n    });\\n  }\\n\\n  refreshCourses() {\\n    CourseDataService.retrieveAllCourses(INSTRUCTOR) //HARDCODED\\n      .then(response => {\\n        console.log(response);\\n        this.setState({ courses: response.data });\\n      });\\n  }\\n\\n  deleteCourseClicked(id) {\\n    CourseDataService.deleteCourse(INSTRUCTOR, id).then(response => {\\n      this.setState({ message: `Delete of course ${id} Successful` });\\n      this.refreshCourses();\\n    });\\n  }\\n\\n  addCourseClicked() {\\n    this.props.history.push(`/courses/-1`);\\n  }\\n\\n  updateCourseClicked(id) {\\n    console.log(\\\"update \\\" + id);\\n    console.log(\\\"This.props.hh\\\", this.state.courses);\\n    this.props.history.push(`/courses/${id}`);\\n  }\\n\\n  render() {\\n    const { courses, currentPage, todosPerPage } = this.state;\\n\\n    // Logic for displaying current todos\\n    const indexOfLastTodo = currentPage * todosPerPage;\\n    const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\\n    const currentTodos = courses.slice(indexOfFirstTodo, indexOfLastTodo);\\n    console.log(currentTodos)\\n\\n/*     const renderTodos = currentTodos.map((todo, index) => {\\n      return <li key={index}>{todo}</li>;\\n    }); */\\n\\n    // Logic for displaying page numbers\\n    const pageNumbers = [];\\n    for (let i = 1; i <= Math.ceil(courses.length / todosPerPage); i++) {\\n      pageNumbers.push(i);\\n    }\\n\\n    const renderPageNumbers = pageNumbers.map(number => {\\n      return (\\n        <li key={number} id={number} onClick={this.handleClick}>\\n          {number}\\n        </li>\\n      );\\n    });\\n\\n    console.log(\\\"render\\\");\\n    return (\\n      <div className=\\\"container\\\">\\n        <h3>Books</h3>\\n        {this.state.message && (\\n          <div class=\\\"alert alert-success\\\">{this.state.message}</div>\\n        )}\\n        <div className=\\\"container\\\">\\n          <table className=\\\"table\\\">\\n            <thead>\\n              <tr>\\n                <th>#</th>\\n                <th>Title</th>\\n                <th>Author</th>\\n                <th>ISBN-13</th>\\n                <th>Comments</th>\\n                <th>Update</th>\\n                <th>Delete</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              {this.state.courses.map(course => (\\n                <tr key={course.id}>\\n                  <td>{course.id}</td>\\n                  <td>{course.description}</td>\\n                  <td>{course.author}</td>\\n                  <td>{course.isbn}</td>\\n                  <td>{course.commentCount}</td>\\n                  <td>\\n                    <button\\n                      className=\\\"btn btn-success\\\"\\n                      onClick={() => this.updateCourseClicked(course.id)}\\n                    >\\n                      Update\\n                    </button>\\n                  </td>\\n                  <td>\\n                    <button\\n                      className=\\\"btn btn-warning\\\"\\n                      onClick={() => this.deleteCourseClicked(course.id)}\\n                    >\\n                      Delete\\n                    </button>\\n                  </td>\\n                </tr>\\n              ))}\\n            </tbody>\\n          </table>\\n          <div className=\\\"row\\\">\\n            <button className=\\\"btn btn-success\\\" onClick={this.addCourseClicked}>\\n              Add book\\n            </button>\\n          </div>\\n          <div>\\n{/*             <ul>{renderTodos}</ul> */}\\n            <ul id=\\\"page-numbers\\\">{renderPageNumbers}</ul>\\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default ListCoursesComponent;\\n\",\"import React, { Component } from 'react'\\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\\nimport CourseDataService from '../service/CourseDataService';\\n\\nconst INSTRUCTOR = 'in28minutes'\\n\\nclass CourseComponent extends Component {\\n    constructor(props) {\\n        super(props)\\n\\n        this.state = {\\n            id: this.props.match.params.id,\\n            author: '',\\n            description: '',\\n            isbn: ''\\n        }\\n\\n        this.onSubmit = this.onSubmit.bind(this)\\n        this.validate = this.validate.bind(this)\\n\\n    }\\n\\n    componentDidMount() {\\n\\n        console.log(this.state.id)\\n\\n        // eslint-disable-next-line\\n        if (this.state.id == -1) {\\n            return\\n        }\\n\\n        CourseDataService.retrieveCourse(INSTRUCTOR, this.state.id)\\n            .then(response => this.setState({\\n                description: response.data.description,\\n                author: response.data.author,\\n                isbn: response.data.isbn\\n            }))\\n    }\\n\\n    validate(values) {\\n        let errors = {}\\n        if (!values.description) {\\n            errors.description = 'Enter a Description'\\n        } else if (values.description.length < 5) {\\n            errors.description = 'Enter atleast 5 Characters in Description'\\n        }\\n\\n        return errors\\n\\n    }\\n\\n    onSubmit(values) {\\n        let username = INSTRUCTOR\\n\\n        let course = {\\n            id: this.state.id,\\n            description: values.description,\\n            author: values.author,\\n            isbn: values.isbn,\\n            targetDate: values.targetDate\\n        }\\n\\n        if (this.state.id === -1) {\\n            CourseDataService.createCourse(username, course)\\n                .then(() => this.props.history.push('/courses'))\\n        } else {\\n            CourseDataService.updateCourse(username, this.state.id, course)\\n                .then(() => this.props.history.push('/courses'))\\n        }\\n\\n        console.log(values);\\n    }\\n\\n    render() {\\n\\n        let { description, id, author, isbn } = this.state\\n\\n        return (\\n            <div>\\n                <h3>Books</h3>\\n                <div className=\\\"container\\\">\\n                    <Formik\\n                        initialValues={{ id, description, author, isbn }}\\n                        onSubmit={this.onSubmit}\\n                        validateOnChange={false}\\n                        validateOnBlur={false}\\n                        validate={this.validate}\\n                        enableReinitialize={true}\\n                    >\\n                        {\\n                            (props) => (\\n                                <Form>\\n                                    <ErrorMessage name=\\\"description\\\" component=\\\"div\\\"\\n                                        className=\\\"alert alert-warning\\\" />\\n                                    <fieldset className=\\\"form-group\\\">\\n                                        <label>Id</label>\\n                                        <Field className=\\\"form-control\\\" type=\\\"text\\\" name=\\\"id\\\" disabled />\\n                                    </fieldset>\\n                                    <fieldset className=\\\"form-group\\\">\\n                                        <label>Title</label>\\n                                        <Field className=\\\"form-control\\\" type=\\\"text\\\" name=\\\"description\\\" />\\n                                    </fieldset>\\n                                    <fieldset className=\\\"form-group\\\">\\n                                        <label>Author</label>\\n                                        <Field className=\\\"form-control\\\" type=\\\"text\\\" name=\\\"author\\\" />\\n                                    </fieldset>\\n                                    <fieldset className=\\\"form-group\\\">\\n                                        <label>ISBN-13</label>\\n                                        <Field className=\\\"form-control\\\" type=\\\"text\\\" name=\\\"isbn\\\" />\\n                                    </fieldset>\\n                                    <button className=\\\"btn btn-success\\\" type=\\\"submit\\\">Save</button>\\n                                </Form>\\n                            )\\n                        }\\n                    </Formik>\\n\\n                </div>\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default CourseComponent\",\"import React, { Component } from 'react';\\nimport ListCoursesComponent from './ListCoursesComponent';\\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\\nimport CourseComponent from './CourseComponent';\\n\\nclass InstructorApp extends Component {\\n    render() {\\n        return (\\n            <Router>\\n                <>\\n                    <h1>Test-assignment for Ignite</h1>\\n                    <Switch>\\n                        <Route path=\\\"/\\\" exact component={ListCoursesComponent} />\\n                        <Route path=\\\"/courses\\\" exact component={ListCoursesComponent} />\\n                        <Route path=\\\"/courses/:id\\\" component={CourseComponent} />\\n                    </Switch>\\n                </>\\n            </Router>\\n        )\\n    }\\n}\\n\\nexport default InstructorApp\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport InstructorApp from './component/InstructorApp';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"container\\\">\\n        <InstructorApp />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{42:function(e,t,a){e.exports=a(76)},47:function(e,t,a){},48:function(e,t,a){},76:function(e,t,a){\"use strict\";a.r(t);var n=a(0),c=a.n(n),r=a(36),i=a.n(r),s=(a(47),a(5)),l=a(6),o=a(11),u=a(10),d=a(12),m=(a(48),a(1)),h=a(17),b=a.n(h),p=\"\".concat(\"http://localhost:8080\",\"/instructors/\").concat(\"in28minutes\"),f=new(function(){function e(){Object(s.a)(this,e)}return Object(l.a)(e,[{key:\"retrieveAllCourses\",value:function(e){return b.a.get(\"\".concat(p,\"/courses\"))}},{key:\"retrieveCourse\",value:function(e,t){return b.a.get(\"\".concat(p,\"/courses/\").concat(t))}},{key:\"deleteCourse\",value:function(e,t){return b.a.delete(\"\".concat(p,\"/courses/\").concat(t))}},{key:\"updateCourse\",value:function(e,t,a){return b.a.put(\"\".concat(p,\"/courses/\").concat(t),a)}},{key:\"createCourse\",value:function(e,t){return b.a.post(\"\".concat(p,\"/courses/\"),t)}}]),e}()),v=a(37),k=a.n(v)()(\"crud-table-pagination\"),C=k.block,E=k.element,O=C(\"div\");O.Link=E(\"button\",\"link\"),O.Prev=E(\"button\",\"previous\"),O.Next=E(\"button\",\"next\");var g=function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(o.a)(this,Object(u.a)(t).call(this,e))).state={activePage:e.defaultActivePage,totalOfItems:e.totalOfItems},a.handleNextClick=a.handleNextClick.bind(Object(m.a)(Object(m.a)(a))),a.handlePreviousClick=a.handlePreviousClick.bind(Object(m.a)(Object(m.a)(a))),a.handleLinkClick=a.handleLinkClick.bind(Object(m.a)(Object(m.a)(a))),a}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"componentWillReceiveProps\",value:function(e){e.totalOfItems!==this.props.totalOfItems&&this.setState({totalOfItems:e.totalOfItems})}},{key:\"update\",value:function(e){this.setState({activePage:e}),this.props.onChange({activePage:e,totalOfItems:this.props.totalOfItems,itemsPerPage:this.props.itemsPerPage})}},{key:\"calculateNumberOfPages\",value:function(){return Math.ceil(this.props.totalOfItems/this.props.itemsPerPage)}},{key:\"handlePreviousClick\",value:function(){this.state.activePage>1&&this.update(this.state.activePage-1)}},{key:\"handleNextClick\",value:function(){var e=this.calculateNumberOfPages();this.state.activePage<e&&this.update(this.state.activePage+1)}},{key:\"handleLinkClick\",value:function(e){this.update(+e.target.textContent.trim())}},{key:\"render\",value:function(){var e=this,t=function(e){for(var t=[],a=0;a<e;a++)t.push(a+1);return t}(this.calculateNumberOfPages());return c.a.createElement(O,null,c.a.createElement(O.Prev,{onClick:this.handlePreviousClick},\"\\xab\"),t.map(function(t){return c.a.createElement(O.Link,{modifiers:t===e.state.activePage?\"active\":\"inactive\",onClick:e.handleLinkClick},t)}),c.a.createElement(O.Next,{onClick:this.handleNextClick},\"\\xbb\"))}}]),t}(n.Component);g.defaultProps={defaultActivePage:1,totalOfItems:0,itemsPerPage:10,onChange:function(){}};var j=function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(o.a)(this,Object(u.a)(t).call(this,e))).state={courses:[],todos:[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\"],currentPage:1,todosPerPage:3,message:null},a.deleteCourseClicked=a.deleteCourseClicked.bind(Object(m.a)(Object(m.a)(a))),a.updateCourseClicked=a.updateCourseClicked.bind(Object(m.a)(Object(m.a)(a))),a.addCourseClicked=a.addCourseClicked.bind(Object(m.a)(Object(m.a)(a))),a.refreshCourses=a.refreshCourses.bind(Object(m.a)(Object(m.a)(a))),a.handleClick=a.handleClick.bind(Object(m.a)(Object(m.a)(a))),a}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"componentDidMount\",value:function(){this.refreshCourses()}},{key:\"handleClick\",value:function(e){this.setState({currentPage:Number(e.target.id)})}},{key:\"refreshCourses\",value:function(){var e=this;f.retrieveAllCourses(\"in28minutes\").then(function(t){console.log(t),e.setState({courses:t.data})})}},{key:\"deleteCourseClicked\",value:function(e){var t=this;f.deleteCourse(\"in28minutes\",e).then(function(a){t.setState({message:\"Delete of course \".concat(e,\" Successful\")}),t.refreshCourses()})}},{key:\"addCourseClicked\",value:function(){this.props.history.push(\"/courses/-1\")}},{key:\"updateCourseClicked\",value:function(e){console.log(\"update \"+e),console.log(\"This.props.hh\",this.state.courses),this.props.history.push(\"/courses/\".concat(e))}},{key:\"render\",value:function(){var e=this,t=this.state,a=t.courses,n=t.currentPage,r=t.todosPerPage,i=n*r,s=i-r,l=a.slice(s,i);console.log(l);for(var o=[],u=1;u<=Math.ceil(a.length/r);u++)o.push(u);var d=o.map(function(t){return c.a.createElement(\"li\",{key:t,id:t,onClick:e.handleClick},t)});return console.log(\"render\"),c.a.createElement(\"div\",{className:\"container\"},c.a.createElement(\"h3\",null,\"Books\"),this.state.message&&c.a.createElement(\"div\",{class:\"alert alert-success\"},this.state.message),c.a.createElement(\"div\",{className:\"container\"},c.a.createElement(\"table\",{className:\"table\"},c.a.createElement(\"thead\",null,c.a.createElement(\"tr\",null,c.a.createElement(\"th\",null,\"#\"),c.a.createElement(\"th\",null,\"Title\"),c.a.createElement(\"th\",null,\"Author\"),c.a.createElement(\"th\",null,\"ISBN-13\"),c.a.createElement(\"th\",null,\"Comments\"),c.a.createElement(\"th\",null,\"Update\"),c.a.createElement(\"th\",null,\"Delete\"))),c.a.createElement(\"tbody\",null,this.state.courses.map(function(t){return c.a.createElement(\"tr\",{key:t.id},c.a.createElement(\"td\",null,t.id),c.a.createElement(\"td\",null,t.description),c.a.createElement(\"td\",null,t.author),c.a.createElement(\"td\",null,t.isbn),c.a.createElement(\"td\",null,t.commentCount),c.a.createElement(\"td\",null,c.a.createElement(\"button\",{className:\"btn btn-success\",onClick:function(){return e.updateCourseClicked(t.id)}},\"Update\")),c.a.createElement(\"td\",null,c.a.createElement(\"button\",{className:\"btn btn-warning\",onClick:function(){return e.deleteCourseClicked(t.id)}},\"Delete\")))}))),c.a.createElement(\"div\",{className:\"row\"},c.a.createElement(\"button\",{className:\"btn btn-success\",onClick:this.addCourseClicked},\"Add book\")),c.a.createElement(\"div\",null,c.a.createElement(\"ul\",{id:\"page-numbers\"},d))))}}]),t}(n.Component),y=a(40),P=a(15),N=a(14),w=function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(o.a)(this,Object(u.a)(t).call(this,e))).state={id:a.props.match.params.id,author:\"\",description:\"\",isbn:\"\"},a.onSubmit=a.onSubmit.bind(Object(m.a)(Object(m.a)(a))),a.validate=a.validate.bind(Object(m.a)(Object(m.a)(a))),a}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;console.log(this.state.id),-1!=this.state.id&&f.retrieveCourse(\"in28minutes\",this.state.id).then(function(t){return e.setState({description:t.data.description,author:t.data.author,isbn:t.data.isbn})})}},{key:\"validate\",value:function(e){var t={};return e.description?e.description.length<5&&(t.description=\"Enter atleast 5 Characters in Description\"):t.description=\"Enter a Description\",t}},{key:\"onSubmit\",value:function(e){var t=this,a={id:this.state.id,description:e.description,author:e.author,isbn:e.isbn,targetDate:e.targetDate};-1===this.state.id?f.createCourse(\"in28minutes\",a).then(function(){return t.props.history.push(\"/courses\")}):f.updateCourse(\"in28minutes\",this.state.id,a).then(function(){return t.props.history.push(\"/courses\")}),console.log(e)}},{key:\"render\",value:function(){var e=this.state,t=e.description,a=e.id,n=e.author,r=e.isbn;return c.a.createElement(\"div\",null,c.a.createElement(\"h3\",null,\"Books\"),c.a.createElement(\"div\",{className:\"container\"},c.a.createElement(N.d,{initialValues:{id:a,description:t,author:n,isbn:r},onSubmit:this.onSubmit,validateOnChange:!1,validateOnBlur:!1,validate:this.validate,enableReinitialize:!0},function(e){return c.a.createElement(N.c,null,c.a.createElement(N.a,{name:\"description\",component:\"div\",className:\"alert alert-warning\"}),c.a.createElement(\"fieldset\",{className:\"form-group\"},c.a.createElement(\"label\",null,\"Id\"),c.a.createElement(N.b,{className:\"form-control\",type:\"text\",name:\"id\",disabled:!0})),c.a.createElement(\"fieldset\",{className:\"form-group\"},c.a.createElement(\"label\",null,\"Title\"),c.a.createElement(N.b,{className:\"form-control\",type:\"text\",name:\"description\"})),c.a.createElement(\"fieldset\",{className:\"form-group\"},c.a.createElement(\"label\",null,\"Author\"),c.a.createElement(N.b,{className:\"form-control\",type:\"text\",name:\"author\"})),c.a.createElement(\"fieldset\",{className:\"form-group\"},c.a.createElement(\"label\",null,\"ISBN-13\"),c.a.createElement(N.b,{className:\"form-control\",type:\"text\",name:\"isbn\"})),c.a.createElement(\"button\",{className:\"btn btn-success\",type:\"submit\"},\"Save\"))})))}}]),t}(n.Component),x=function(e){function t(){return Object(s.a)(this,t),Object(o.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return c.a.createElement(y.a,null,c.a.createElement(c.a.Fragment,null,c.a.createElement(\"h1\",null,\"Test-assignment for Ignite\"),c.a.createElement(P.c,null,c.a.createElement(P.a,{path:\"/\",exact:!0,component:j}),c.a.createElement(P.a,{path:\"/courses\",exact:!0,component:j}),c.a.createElement(P.a,{path:\"/courses/:id\",component:w}))))}}]),t}(n.Component),I=function(e){function t(){return Object(s.a)(this,t),Object(o.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return c.a.createElement(\"div\",{className:\"container\"},c.a.createElement(x,null))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(c.a.createElement(I,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[42,1,2]]]);","extractedComments":[]}