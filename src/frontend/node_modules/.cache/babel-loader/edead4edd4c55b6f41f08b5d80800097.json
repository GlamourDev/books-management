{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\src\\\\component\\\\commentbox.js\";\nimport React, { Component } from \"react\";\n\nvar CommentForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CommentForm, _React$Component);\n\n  function CommentForm(props) {\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentForm).call(this, props));\n    _this.state = {\n      author: '',\n      txt: ''\n    };\n    _this.handleAuthorChange = _this.handleAuthorChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTextChange = _this.handleTextChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormSubmit = _this.handleFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"handleAuthorChange\",\n    value: function handleAuthorChange(e) {\n      this.setState({\n        author: e.target.value\n      });\n    }\n  }, {\n    key: \"handleTextChange\",\n    value: function handleTextChange(e) {\n      console.log(e.target.value);\n      this.setState({\n        txt: e.target.value\n      });\n    }\n  }, {\n    key: \"handleFormSubmit\",\n    value: function handleFormSubmit(e) {\n      e.preventDefault();\n      var author = this.state.author.trim();\n      var txt = this.state.txt.trim();\n      if (!txt || !author) return;\n      this.props.onCommentSubmit({\n        author: author,\n        txt: txt\n      });\n      this.setState({\n        author: \"\",\n        txt: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"commentForm\",\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        value: this.state.author,\n        onChange: this.handleAuthorChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: this.state.author.length > 0 ? \"active\" : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Name\")), React.createElement(\"div\", {\n        className: \"group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        value: this.state.txt,\n        onChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: this.state.txt.length > 0 ? \"active\" : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Comment\")), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CommentForm;\n}(React.Component);\n\nvar CommentList =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(CommentList, _React$Component2);\n\n  function CommentList() {\n    _classCallCheck(this, CommentList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CommentList).apply(this, arguments));\n  }\n\n  _createClass(CommentList, [{\n    key: \"render\",\n    value: function render() {\n      var CommentNodes = this.props.data.map(function (comment) {\n        return React.createElement(Comment, {\n          author: comment.author,\n          key: comment.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, comment.txt);\n      });\n      return React.createElement(\"div\", {\n        className: \"commentList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Comments:\"), CommentNodes);\n    }\n  }]);\n\n  return CommentList;\n}(React.Component);\n\nvar Comment =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Comment, _React$Component3);\n\n  function Comment() {\n    _classCallCheck(this, Comment);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Comment).apply(this, arguments));\n  }\n\n  _createClass(Comment, [{\n    key: \"render\",\n    //Workaround from React protection from XRR attack. \n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"commentAuthor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.props.author), React.createElement(\"span\", {\n        className: \"commentBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Comment;\n}(React.Component);\n\nvar CommentBox =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(CommentBox, _React$Component4);\n\n  function CommentBox(props) {\n    var _this2;\n\n    _classCallCheck(this, CommentBox);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(CommentBox).call(this, props));\n    _this2.state = {\n      data: []\n    };\n    _this2.__loadComments = _this2.__loadComments.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(CommentBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.__loadComments();\n\n      setInterval(this.__loadComments, this.props.longpoll);\n    }\n  }, {\n    key: \"__loadComments\",\n    value: function __loadComments() {\n      var _this3 = this;\n\n      this.setState({\n        data: []\n      });\n      var comments = this.props.database.child('comments');\n      comments.once('value').then(function (s) {\n        s.forEach(function (c) {\n          var author = c.val().author;\n          var txt = c.val().txt;\n          var key = c.key();\n          var newData = {};\n          newData.author = author;\n          newData.txt = txt;\n          newData.key = key;\n          console.log(newData);\n          console.log(_this3);\n\n          _this3.setState({\n            data: _this3.state.data.concat(newData)\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_handleCommentSubmit\",\n    value: function _handleCommentSubmit(comment) {\n      this.props.database.child('comments').push({\n        author: comment.author,\n        txt: comment.txt\n      });\n      comment.key = Math.random();\n      this.setState({\n        data: this.state.data.concat(comment)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"commentBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(CommentForm, {\n        onCommentSubmit: this._handleCommentSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(CommentList, {\n        data: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CommentBox;\n}(React.Component);\n\nexport { CommentForm, CommentList };","map":{"version":3,"sources":["C:\\Users\\Henry\\Pictures\\tlnsadama kliendipinnacroppedimages\\react-and-spring-master\\frontend\\src\\component\\commentbox.js"],"names":["React","Component","CommentForm","props","state","author","txt","handleAuthorChange","bind","handleTextChange","handleFormSubmit","e","setState","target","value","console","log","preventDefault","trim","onCommentSubmit","length","CommentList","CommentNodes","data","map","comment","id","Comment","CommentBox","__loadComments","setInterval","longpoll","comments","database","child","once","then","s","forEach","c","val","key","newData","concat","push","Math","random","_handleCommentSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass CommentForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            author: '',\r\n            txt: ''\r\n        }\r\n        \r\n        this.handleAuthorChange = this.handleAuthorChange.bind(this)\r\n        this.handleTextChange = this.handleTextChange.bind(this)\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    }\r\n    \r\n    handleAuthorChange(e) {\r\n        this.setState({author: e.target.value});\r\n    }\r\n    \r\n    handleTextChange(e) {\r\n        console.log(e.target.value);\r\n        this.setState({txt: e.target.value});\r\n    }\r\n    \r\n    handleFormSubmit(e) {\r\n        e.preventDefault();\r\n        const author = this.state.author.trim();\r\n        const txt = this.state.txt.trim();\r\n        if(!txt || !author) return;\r\n        \r\n        this.props.onCommentSubmit({author: author, txt: txt});\r\n        this.setState({author: \"\", txt: \"\"});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form className='commentForm' onSubmit={this.handleFormSubmit}>\r\n                <div className=\"group\">\r\n                    <input type='text' className='input' value={this.state.author} onChange={this.handleAuthorChange}/>\r\n                    <span className=\"bar\"></span>\r\n                    <label className={this.state.author.length > 0? \"active\": null}>Name</label>\r\n                </div>\r\n                    \r\n                <div className=\"group\">\r\n                    <input type='text' className='input' value={this.state.txt} onChange={this.handleTextChange}/>\r\n                    <span className=\"bar\"></span>\r\n                    <label className={this.state.txt.length > 0? \"active\": null}>Comment</label>\r\n                </div>\r\n                \r\n                <input type='submit' value='Post'/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass CommentList extends React.Component {\r\n    render() {\r\n        const CommentNodes = this.props.data.map((comment)=>{\r\n            return (\r\n                <Comment author={comment.author} key={comment.id}>{comment.txt}\r\n                </Comment>\r\n            );\r\n        });\r\n        return (\r\n            <div className='commentList'>\r\n                <h2>Comments:</h2>\r\n                {CommentNodes}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Comment extends React.Component {\r\n    //Workaround from React protection from XRR attack. \r\n    \r\n    render() {\r\n        return (\r\n            <div className='comment'>\r\n                <h3 className='commentAuthor'>\r\n                    {this.props.author}\r\n                </h3>\r\n                \r\n                <span className='commentBody'/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CommentBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            data: []\r\n        };\r\n        \r\n        this.__loadComments = this.__loadComments.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.__loadComments();\r\n        setInterval(this.__loadComments, this.props.longpoll);\r\n    }\r\n    \r\n    __loadComments(){\r\n        this.setState({data: []});\r\n        const comments = this.props.database.child('comments');\r\n        comments.once('value')\r\n                .then((s) => {\r\n                    s.forEach((c) => {\r\n                        var author = c.val().author;\r\n                        var txt = c.val().txt;\r\n                        var key = c.key();\r\n                        const newData = {};\r\n                        newData.author = author;\r\n                        newData.txt = txt;\r\n                        newData.key = key;\r\n                        console.log(newData);\r\n                        console.log(this);\r\n                        \r\n                        this.setState({data: this.state.data.concat(newData)});\r\n                    });\r\n                });\r\n    }\r\n    \r\n    _handleCommentSubmit(comment) {\r\n        this.props.database.child('comments').push({\r\n            author: comment.author,\r\n            txt: comment.txt\r\n        });\r\n        comment.key = Math.random();\r\n        this.setState({data: this.state.data.concat(comment)});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className='commentBox'>\r\n                <CommentForm onCommentSubmit={this._handleCommentSubmit.bind(this)}></CommentForm>\r\n                <CommentList data= {this.state.data}></CommentList>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {CommentForm, CommentList}"]},"metadata":{},"sourceType":"module"}