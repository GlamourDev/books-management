{"version":3,"sources":["../../../../../../Pictures/tlnsadama kliendipinnacroppedimages/react-and-spring-master/frontend/src/service/BooksDataService.js","../../../../../../Pictures/tlnsadama kliendipinnacroppedimages/react-and-spring-master/frontend/src/component/ListBooksComponent.jsx","../../../../../../Pictures/tlnsadama kliendipinnacroppedimages/react-and-spring-master/frontend/src/service/CommentsDataService.js","../../../../../../Pictures/tlnsadama kliendipinnacroppedimages/react-and-spring-master/frontend/src/component/EditBooksComponent.jsx","../../../../../../Pictures/tlnsadama kliendipinnacroppedimages/react-and-spring-master/frontend/src/component/MainApp.jsx","../../../../../../Pictures/tlnsadama kliendipinnacroppedimages/react-and-spring-master/frontend/src/App.js","../../../../../../Pictures/tlnsadama kliendipinnacroppedimages/react-and-spring-master/frontend/src/serviceWorker.js","../../../../../../Pictures/tlnsadama kliendipinnacroppedimages/react-and-spring-master/frontend/src/index.js"],"names":["ROOT_API_URL","service_BooksDataService","axios","get","concat","id","delete","book","put","post","ListBooksComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillUnmount","mounted","timeout","clearTimeout","state","books","currentPage","booksPerPage","loading","clicked","message","deleteBookClicked","bind","assertThisInitialized","updateBookClicked","addBookClicked","refreshbooks","refreshBooks","handleClick","event","_this2","setState","Number","target","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","setTimeout","stop","_this3","BooksDataService","retrieveAllBooks","then","response","console","log","data","_callee2","_context2","_this4","deleteBook","history","push","_this5","_this$state","indexOfLastSlice","indexOfFirstSlice","currentBooks","slice","pageNumbers","i","Math","ceil","length","renderPageNumbers","map","number","react_default","createElement","className","key","onClick","override","css","_templateObject","react_spinners","sizeUnit","size","color","class","description","author","isbn","commentCount","IconButton_default","aria-label","Edit_default","Delete_default","Button_default","variant","type","style","padding","height","float","Component","service_CommentsDataService","comment","EditBooksComponent","getDate","date","Date","toDateString","match","params","comments","onSubmit","onSubmitComment","validate","refreshComments","retrieveBook","CommentsDataService","retrieveComment","timestamp","values","errors","retrieveAllComments","targetDate","createBook","updateBook","createComment","updateComment","_this6","formik_esm","initialValues","validateOnChange","validateOnBlur","enableReinitialize","name","component","border","renderComments","MainApp","react_router_dom","Fragment","margin-bottom","react_router","path","exact","App","component_MainApp","window","open","width","viewBox","d","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54c3d006.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst ROOT_API_URL = \"http://localhost:8080\";\n\nclass BooksDataService {\n  retrieveAllBooks() {\n    //console.log('executed service')\n    return axios.get(`${ROOT_API_URL}/books`);\n  }\n\n  retrieveBook(id) {\n    //console.log('executed service')\n    return axios.get(`${ROOT_API_URL}/books/${id}`);\n  }\n\n  deleteBook(id) {\n    //console.log('executed service')\n    return axios.delete(`${ROOT_API_URL}/books/${id}`);\n  }\n\n  updateBook(id, book) {\n    //console.log('executed service')\n    return axios.put(`${ROOT_API_URL}/books/${id}`, book);\n  }\n\n  createBook(book) {\n    //console.log('executed service')\n    return axios.post(`${ROOT_API_URL}/books/`, book);\n  }\n}\n\nexport default new BooksDataService();\n","import React, { Component } from \"react\";\nimport BooksDataService from \"../service/BooksDataService\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport { ScaleLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\n\nclass ListBooksComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.timeout = null;\n    this.state = {\n      books: [],\n      currentPage: 1,\n      booksPerPage: 3,\n      loading: false,\n      clicked: false,\n      message: null\n    };\n    this.deleteBookClicked = this.deleteBookClicked.bind(this);\n    this.updateBookClicked = this.updateBookClicked.bind(this);\n    this.addBookClicked = this.addBookClicked.bind(this);\n    this.refreshbooks = this.refreshBooks.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshBooks();\n    this.mounted = true;\n  }\n\n  componentWillUnmount = () => {\n    this.mounted = false;\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  };\n\n  handleClick(event) {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n    if (!this.state.clicked) {\n      this.setState({ clicked: true, loading: true }, async () => {\n        this.timeout = setTimeout(() => {\n          if (this.mounted) this.setState({ clicked: false, loading: false });\n          this.timeout = null;\n        }, 1500);\n      });\n    }\n  }\n\n  refreshBooks() {\n    BooksDataService.retrieveAllBooks().then(response => {\n      console.log(response);\n      this.setState({ books: response.data });\n    });\n    if (!this.state.clicked) {\n      this.setState({ clicked: true, loading: true }, async () => {\n        this.timeout = setTimeout(() => {\n          if (this.mounted) this.setState({ clicked: false, loading: false });\n          this.timeout = null;\n        }, 1500);\n      });\n    }\n  }\n\n  deleteBookClicked(id) {\n    BooksDataService.deleteBook(id).then(response => {\n      this.setState({ message: `Delete of course ${id} Successful` });\n      this.refreshBooks();\n    });\n  }\n\n  addBookClicked() {\n    this.props.history.push(`/books/-1`);\n  }\n\n  updateBookClicked(id) {\n    this.props.history.push(`/books/${id}`);\n  }\n\n  render() {\n    const { books, currentPage, booksPerPage, id } = this.state;\n\n    // Logic for displaying current books\n    const indexOfLastSlice = currentPage * booksPerPage;\n    const indexOfFirstSlice = indexOfLastSlice - booksPerPage;\n    const currentBooks = books.slice(indexOfFirstSlice, indexOfLastSlice);\n\n    // Logic for displaying page numbers\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(books.length / booksPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    console.log(pageNumbers, id, currentPage);\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return (\n        <li\n          className={`${currentPage === number ? \"pagination-active\" : \"\"} `}\n          key={number}\n          id={number}\n          onClick={this.handleClick}\n        >\n          {number}\n        </li>\n      );\n    });\n    const override = css`\n      display: table;\n      margin: 0 auto;\n      border-color: red;\n    `;\n\n    return (\n      <div className=\"container\">\n        <div className=\"sweet-loading\">\n          <ScaleLoader\n            sizeUnit={\"px\"}\n            size={150}\n            css={override}\n            color={\"#123abc\"}\n            loading={this.state.loading}\n          />\n        </div>\n        <h3>Books</h3>\n        {this.state.message && (\n          <div class=\"alert alert-success\">{this.state.message}</div>\n        )}\n        <div className=\"container\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Title</th>\n                <th>Author</th>\n                <th>ISBN-13</th>\n                <th>Comments</th>\n                <th>Edit</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {currentBooks.map(book => (\n                <tr key={book.id}>\n                  <td>{book.id}</td>\n                  <td>{book.description}</td>\n                  <td>{book.author}</td>\n                  <td>{book.isbn}</td>\n                  <td>{book.commentCount}</td>\n                  <td>\n                    <IconButton aria-label=\"Edit\">\n                      <EditIcon\n                        onClick={() => this.updateBookClicked(book.id)}\n                      />\n                    </IconButton>\n                  </td>\n                  <td>\n                    <IconButton aria-label=\"Delete\">\n                      <DeleteIcon\n                        onClick={() => this.deleteBookClicked(book.id)}\n                      />\n                    </IconButton>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <div>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={this.addBookClicked}\n              type=\"submit\"\n              style={{\n                padding: \"0.5rem 2rem\",\n                height: \"2.5rem\",\n                float: \"right\"\n              }}\n            >\n              Add book\n            </Button>\n          </div>\n          <div>\n            <ul className=\"pagination\" id=\"page-numbers\">\n              {renderPageNumbers}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListBooksComponent;\n","import axios from \"axios\";\r\n\r\nconst ROOT_API_URL = \"http://localhost:8080\";\r\n\r\nclass CommentsDataService {\r\n  retrieveAllComments() {\r\n    //console.log('executed service')\r\n    return axios.get(`${ROOT_API_URL}/comments`);\r\n  }\r\n\r\n  retrieveComment(id) {\r\n    //console.log('executed service')\r\n    return axios.get(`${ROOT_API_URL}/comments/${id}`);\r\n  }\r\n\r\n  deleteComment(id) {\r\n    //console.log('executed service')\r\n    return axios.delete(`${ROOT_API_URL}/comments/${id}`);\r\n  }\r\n\r\n  updateComment(id, comment) {\r\n    //console.log('executed service')\r\n    return axios.put(`${ROOT_API_URL}/comments/${id}`, comment);\r\n  }\r\n\r\n  createComment(comment) {\r\n    console.log(\"executed service\");\r\n    return axios.post(`${ROOT_API_URL}/comments/`, comment);\r\n  }\r\n}\r\n\r\nexport default new CommentsDataService();\r\n","import React, { Component } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport BooksDataService from \"../service/BooksDataService\";\nimport CommentsDataService from \"../service/CommentsDataService\";\nimport Button from \"@material-ui/core/Button\";\n\nclass EditBooksComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: this.props.match.params.id,\n      author: \"\",\n      date: \"\",\n      description: \"\",\n      comments: [],\n      isbn: \"\"\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onSubmitComment = this.onSubmitComment.bind(this);\n    this.validate = this.validate.bind(this);\n    this.refreshComments = this.refreshComments.bind(this);\n  }\n\n  componentDidMount() {\n    this.getDate();\n    this.refreshComments();\n\n    // eslint-disable-next-line\n    if (this.state.id == -1) {\n      return;\n    }\n\n    BooksDataService.retrieveBook(this.state.id).then(response =>\n      this.setState({\n        description: response.data.description,\n        author: response.data.author,\n        isbn: response.data.isbn,\n        commentCount: response.data.commentCount\n      })\n    );\n\n    CommentsDataService.retrieveComment(this.state.id).then(response =>\n      this.setState({\n        comments: response.data.comments,\n        timestamp: response.data.timestamp\n      })\n    );\n  }\n  validate(values) {\n    let errors = {};\n    if (!values.description) {\n      errors.description = \"Enter Title\";\n    } else if (values.description.length < 5) {\n      errors.description = \"Enter atleast 5 Characters in Title\";\n    }\n\n    return errors;\n  }\n\n  getDate = () => {\n    var date = new Date().toDateString().slice(0, 10);\n    this.setState({ date });\n  };\n\n  refreshComments() {\n    CommentsDataService.retrieveAllComments().then(response => {\n      this.setState({ comments: response.data });\n    });\n  }\n\n  renderComments() {\n    return this.state.comments.map(comment => {\n      return (\n        <ul key={comment.id}>\n          <li>\n            Date: <span>{comment.timestamp}</span>\n          </li>\n          <li>\n            Comment: <span>{comment.comments}</span>\n          </li>\n        </ul>\n      );\n    });\n  }\n\n  onSubmit(values) {\n    let book = {\n      id: this.state.id,\n      description: values.description,\n      author: values.author,\n      isbn: values.isbn,\n      targetDate: values.targetDate,\n      commentCount: values.commentCount\n    };\n\n    if (this.state.id === \"-1\") {\n      BooksDataService.createBook(book).then(() =>\n        this.props.history.push(\"/books\")\n      );\n    } else {\n      BooksDataService.updateBook(this.state.id, book).then(() =>\n        this.props.history.push(\"/books\")\n      );\n    }\n    console.log(values);\n  }\n\n  onSubmitComment(values) {\n    let comment = {\n      id: this.state.id,\n      comments: values.comments,\n      timestamp: this.state.date\n    };\n\n    if (this.state.id === \"-1\") {\n      CommentsDataService.createComment(comment).then(() =>\n        this.props.history.push(\"/books\")\n      );\n    } else {\n      CommentsDataService.updateComment(this.state.id, comment).then(() =>\n        this.props.history.push(\"/books\")\n      );\n    }\n    console.log(values);\n  }\n\n  render() {\n    let { description, id, author, isbn, commentCount } = this.state;\n    console.log(this.state.comments);\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-6 first-column\">\n              <h3>Add | Edit book</h3>\n              <Formik\n                initialValues={{ id, description, author, isbn, commentCount }}\n                onSubmit={this.onSubmit}\n                validateOnChange={false}\n                validateOnBlur={false}\n                validate={this.validate}\n                enableReinitialize={true}\n              >\n                {props => (\n                  <Form>\n                    <ErrorMessage\n                      name=\"description\"\n                      component=\"div\"\n                      className=\"alert alert-warning\"\n                    />\n                    <fieldset className=\"form-group\">\n                      <label>Title</label>\n                      <Field\n                        className=\"form-control\"\n                        type=\"text\"\n                        name=\"description\"\n                      />\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                      <label>Author</label>\n                      <Field\n                        className=\"form-control\"\n                        type=\"text\"\n                        name=\"author\"\n                      />\n                    </fieldset>\n                    <fieldset className=\"form-group\">\n                      <label>ISBN-13</label>\n                      <Field className=\"form-control\" type=\"text\" name=\"isbn\" />\n                    </fieldset>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={this.addBookClicked}\n                      type=\"submit\"\n                      className=\"float-right\"\n                      style={{\n                        padding: \"0.5rem 2rem\",\n                        height: \"2.5rem\",\n                        float: \"right\",\n                        color: \"#28a745\",\n                        border: \"1px solid rgba(40, 167, 69, 0.5)\"\n                      }}\n                    >\n                      Update\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n            </div>\n            <div className=\"col-sm-6 second-column\">\n              <h3>Comments</h3>\n              <Formik\n                onSubmit={this.onSubmitComment}\n                enableReinitialize={true}\n                initialValues={{ id }}\n              >\n                {props => (\n                  <Form>\n                    <fieldset className=\"form-group\">\n                      <label>Comment</label>\n                      <Field\n                        className=\"form-control\"\n                        type=\"text\"\n                        name=\"comments\"\n                      />\n                    </fieldset>\n                    <Button size=\"medium\" type=\"submit\" className=\"float-right\">\n                      Add comment\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n              <div className=\"comments-box\">{this.renderComments()}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditBooksComponent;\n","import React, { Component } from 'react';\nimport ListBooksComponent from './ListBooksComponent';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport EditBooksComponent from './EditBooksComponent';\n\nclass MainApp extends Component {\n    render() {\n        return (\n            <Router>\n                <>\n                    <h1 style={{\"margin-bottom\": \"4%\"}}>Test-assignment for Ignite</h1>\n                    <Switch>\n                        <Route path=\"/\" exact component={ListBooksComponent} />\n                        <Route path=\"/books\" exact component={ListBooksComponent} />\n                        <Route path=\"/books/:id\" component={EditBooksComponent} />\n                    </Switch>\n                </>\n            </Router>\n        )\n    }\n}\n\nexport default MainApp","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport MainApp from \"./component/MainApp\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <MainApp />\n        <div id=\"wrapper\">\n          <h1>\n            Made with\n            <svg\n              id=\"text-heart\"\n              onClick={() =>\n                window.open(\"https://bit.ly/hlportfolios\", \"_blank\")\n              }\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z\" />\n            </svg>\n            by Henry Lõiv\n          </h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}