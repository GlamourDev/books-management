{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\src\\\\component\\\\EditBooksComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport BooksDataService from '../service/BooksDataService';\nvar INSTRUCTOR = 'in28minutes';\n\nvar EditBooksComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditBooksComponent, _Component);\n\n  function EditBooksComponent(props) {\n    var _this;\n\n    _classCallCheck(this, EditBooksComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditBooksComponent).call(this, props));\n    _this.state = {\n      id: _this.props.match.params.id,\n      author: '',\n      description: '',\n      isbn: ''\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditBooksComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.state.id); // eslint-disable-next-line\n\n      if (this.state.id == -1) {\n        return;\n      }\n\n      BooksDataService.retrieveCourse(INSTRUCTOR, this.state.id).then(function (response) {\n        return _this2.setState({\n          description: response.data.description,\n          author: response.data.author,\n          isbn: response.data.isbn\n        });\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(values) {\n      var errors = {};\n\n      if (!values.description) {\n        errors.description = 'Enter a Description';\n      } else if (values.description.length < 5) {\n        errors.description = 'Enter atleast 5 Characters in Description';\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this3 = this;\n\n      var username = INSTRUCTOR;\n      var book = {\n        id: this.state.id,\n        description: values.description,\n        author: values.author,\n        isbn: values.isbn,\n        targetDate: values.targetDate\n      };\n\n      if (this.state.id === -1) {\n        BooksDataService.createBook(username, course).then(function () {\n          return _this3.props.history.push('/courses');\n        });\n      } else {\n        BooksDataService.updateBook(username, this.state.id, course).then(function () {\n          return _this3.props.history.push('/courses');\n        });\n      }\n\n      console.log(values);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          description = _this$state.description,\n          id = _this$state.id,\n          author = _this$state.author,\n          isbn = _this$state.isbn;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Books\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          id: id,\n          description: description,\n          author: author,\n          isbn: isbn\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: \"description\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Id\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"id\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Title\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Author\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"author\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"ISBN-13\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"isbn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Save\"));\n      })));\n    }\n  }]);\n\n  return EditBooksComponent;\n}(Component);\n\nexport default EditBooksComponent;","map":{"version":3,"sources":["C:\\Users\\Henry\\Pictures\\tlnsadama kliendipinnacroppedimages\\react-and-spring-master\\frontend\\src\\component\\EditBooksComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","BooksDataService","INSTRUCTOR","EditBooksComponent","props","state","id","match","params","author","description","isbn","onSubmit","bind","validate","console","log","retrieveCourse","then","response","setState","data","values","errors","length","username","book","targetDate","createBook","course","history","push","updateBook"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport BooksDataService from '../service/BooksDataService';\n\nconst INSTRUCTOR = 'in28minutes'\n\nclass EditBooksComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            author: '',\n            description: '',\n            isbn: ''\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        console.log(this.state.id)\n\n        // eslint-disable-next-line\n        if (this.state.id == -1) {\n            return\n        }\n\n        BooksDataService.retrieveCourse(INSTRUCTOR, this.state.id)\n            .then(response => this.setState({\n                description: response.data.description,\n                author: response.data.author,\n                isbn: response.data.isbn\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if (!values.description) {\n            errors.description = 'Enter a Description'\n        } else if (values.description.length < 5) {\n            errors.description = 'Enter atleast 5 Characters in Description'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        let username = INSTRUCTOR\n\n        let book = {\n            id: this.state.id,\n            description: values.description,\n            author: values.author,\n            isbn: values.isbn,\n            targetDate: values.targetDate\n        }\n\n        if (this.state.id === -1) {\n            BooksDataService.createBook(username, course)\n                .then(() => this.props.history.push('/courses'))\n        } else {\n            BooksDataService.updateBook(username, this.state.id, course)\n                .then(() => this.props.history.push('/courses'))\n        }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { description, id, author, isbn } = this.state\n\n        return (\n            <div>\n                <h3>Books</h3>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ id, description, author, isbn }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <fieldset className=\"form-group\">\n                                        <label>Id</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Title</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Author</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"author\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>ISBN-13</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"isbn\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EditBooksComponent"]},"metadata":{},"sourceType":"module"}