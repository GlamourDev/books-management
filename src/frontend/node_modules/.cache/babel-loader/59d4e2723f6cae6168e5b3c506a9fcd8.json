{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Henry\\\\Pictures\\\\tlnsadama kliendipinnacroppedimages\\\\react-and-spring-master\\\\frontend\\\\src\\\\component\\\\ListCoursesComponent.jsx\";\n\nimport React, { Component } from 'react';\nimport CourseDataService from '../service/CourseDataService';\nimport Pagination from '../pagination';\nvar INSTRUCTOR = 'in28minutes';\nvar service = {\n  fetchItems: function fetchItems(payload) {\n    var result = Array.from(_this.state.courses);\n    var _payload$pagination = payload.pagination,\n        activePage = _payload$pagination.activePage,\n        itemsPerPage = _payload$pagination.itemsPerPage;\n    var start = (activePage - 1) * itemsPerPage;\n    var end = start + itemsPerPage;\n    console.log(result);\n    var resultpagination = result.slice(start, end);\n    return Promise.resolve(resultpagination);\n  },\n  fetchTotal: function fetchTotal() {\n    return Promise.resolve(_this.state.courses.length);\n  }\n};\n\nvar ListCoursesComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListCoursesComponent, _Component);\n\n  function ListCoursesComponent(props) {\n    var _this2;\n\n    _classCallCheck(this, ListCoursesComponent);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ListCoursesComponent).call(this, props));\n    _this2.state = {\n      courses: [],\n      message: null\n    };\n    _this2.deleteCourseClicked = _this2.deleteCourseClicked.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.updateCourseClicked = _this2.updateCourseClicked.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.addCourseClicked = _this2.addCourseClicked.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.refreshCourses = _this2.refreshCourses.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(ListCoursesComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshCourses();\n    }\n  }, {\n    key: \"refreshCourses\",\n    value: function refreshCourses() {\n      var _this3 = this;\n\n      CourseDataService.retrieveAllCourses(INSTRUCTOR) //HARDCODED\n      .then(function (response) {\n        console.log(response);\n\n        _this3.setState({\n          courses: response.data\n        });\n      });\n    }\n  }, {\n    key: \"deleteCourseClicked\",\n    value: function deleteCourseClicked(id) {\n      var _this4 = this;\n\n      CourseDataService.deleteCourse(INSTRUCTOR, id).then(function (response) {\n        _this4.setState({\n          message: \"Delete of course \".concat(id, \" Successful\")\n        });\n\n        _this4.refreshCourses();\n      });\n    }\n  }, {\n    key: \"addCourseClicked\",\n    value: function addCourseClicked() {\n      this.props.history.push(\"/courses/-1\");\n    }\n  }, {\n    key: \"updateCourseClicked\",\n    value: function updateCourseClicked(id) {\n      console.log('update ' + id);\n      console.log(\"This.props.hh\", this.state.courses);\n      this.props.history.push(\"/courses/\".concat(id));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      console.log('render');\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Books\"), this.state.message && React.createElement(\"div\", {\n        class: \"alert alert-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Author\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"ISBN-13\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Comments\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Update\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Delete\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.courses.map(function (course) {\n        return React.createElement(\"tr\", {\n          key: course.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, course.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, course.description), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, course.author), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, course.isbn), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, course.commentCount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          onClick: function onClick() {\n            return _this5.updateCourseClicked(course.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Update\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: function onClick() {\n            return _this5.deleteCourseClicked(course.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Delete\")));\n      }))), React.createElement(Pagination, {\n        itemsPerPage: 3,\n        fetchTotalOfItems: function fetchTotalOfItems(payload) {\n          return service.fetchTotal(payload);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.addCourseClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Add\"))));\n    }\n  }]);\n\n  return ListCoursesComponent;\n}(Component);\n\nexport default ListCoursesComponent;","map":{"version":3,"sources":["C:\\Users\\Henry\\Pictures\\tlnsadama kliendipinnacroppedimages\\react-and-spring-master\\frontend\\src\\component\\ListCoursesComponent.jsx"],"names":["React","Component","CourseDataService","Pagination","INSTRUCTOR","service","fetchItems","payload","result","Array","from","state","courses","pagination","activePage","itemsPerPage","start","end","console","log","resultpagination","slice","Promise","resolve","fetchTotal","length","ListCoursesComponent","props","message","deleteCourseClicked","bind","updateCourseClicked","addCourseClicked","refreshCourses","retrieveAllCourses","then","response","setState","data","id","deleteCourse","history","push","map","course","description","author","isbn","commentCount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CourseDataService from '../service/CourseDataService';\nimport Pagination from '../pagination'\n\nconst INSTRUCTOR = 'in28minutes'\n\nconst service = {\n  fetchItems: (payload) => {\n    let result = Array.from(this.state.courses);\n    const { activePage, itemsPerPage } = payload.pagination;\n    const start = (activePage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    console.log(result)\n    const resultpagination = result.slice(start, end);\n    return Promise.resolve(resultpagination);\n  },\n  fetchTotal: () => Promise.resolve(this.state.courses.length),\n\n};\n\nclass ListCoursesComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            courses: [],\n            message: null\n        }\n        this.deleteCourseClicked = this.deleteCourseClicked.bind(this)\n        this.updateCourseClicked = this.updateCourseClicked.bind(this)\n        this.addCourseClicked = this.addCourseClicked.bind(this)\n        this.refreshCourses = this.refreshCourses.bind(this)\n    }\n\n    componentDidMount() {\n        this.refreshCourses();\n    }\n\n    refreshCourses() {\n        CourseDataService.retrieveAllCourses(INSTRUCTOR)//HARDCODED\n            .then(\n                response => {\n                    console.log(response);\n                    this.setState({ courses: response.data })\n                }\n            )\n    }\n\n    deleteCourseClicked(id) {\n        CourseDataService.deleteCourse(INSTRUCTOR, id)\n            .then(\n                response => {\n                    this.setState({ message: `Delete of course ${id} Successful` })\n                    this.refreshCourses()\n                }\n            )\n\n    }\n\n    addCourseClicked() {\n        this.props.history.push(`/courses/-1`)\n    }\n\n    updateCourseClicked(id) {\n        console.log('update ' + id)\n        console.log(\"This.props.hh\",this.state.courses)\n        this.props.history.push(`/courses/${id}`)\n    }\n\n    render() {\n        console.log('render')\n        return (\n            <div className=\"container\">\n                <h3>Books</h3>\n                {this.state.message && <div class=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Id</th>\n                                <th>Description</th>\n                                <th>Author</th>\n                                <th>ISBN-13</th>\n                                <th>Comments</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.courses.map(\n                                    course =>\n                                        <tr key={course.id}>\n                                            <td>{course.id}</td>\n                                            <td>{course.description}</td>\n                                            <td>{course.author}</td>\n                                            <td>{course.isbn}</td>\n                                            <td>{course.commentCount}</td>\n                                            <td><button className=\"btn btn-success\" onClick={() => this.updateCourseClicked(course.id)}>Update</button></td>\n                                            <td><button className=\"btn btn-warning\" onClick={() => this.deleteCourseClicked(course.id)}>Delete</button></td>\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                    <Pagination\n                    itemsPerPage={3}\n                    fetchTotalOfItems={payload => service.fetchTotal(payload)}\n                  />\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.addCourseClicked}>Add</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListCoursesComponent"]},"metadata":{},"sourceType":"module"}